"""The root query type"""
type Query {
  """All Events"""
  allEventsquery(
    """Returns the items in the list that come after the specified cursor."""
    after: String

    """Returns the first n items from the list."""
    first: Int

    """Returns the items in the list that come before the specified cursor."""
    before: String

    """Returns the last n items from the list."""
    last: Int
  ): EventConnection!
}

"""A connection to a list of items."""
type EventConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [EventEdge]
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

"""An edge in a connection."""
type EventEdge {
  """The item at the end of the edge"""
  node: Event

  """A cursor for use in pagination"""
  cursor: String!
}

type Event {
  """The ID of an object"""
  id: ID!
  event: String!
}

"""The root mutation type"""
type Mutation {
  """Create a new event"""
  CreateEventMutation(input: CreateEventInput!): CreateEventPayload
}

type CreateEventPayload {
  event: Event
  clientMutationId: String
}

input CreateEventInput {
  content: String
  clientMutationId: String
}